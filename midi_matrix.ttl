# Copyright (c) 2015 Hanspeter Portner (dev@open-music-kontrollers.ch)
#
# This is free software: you can redistribute it and/or modify
# it under the terms of the Artistic License 2.0 as published by
# The Perl Foundation.
#
# This source is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# Artistic License 2.0 for more details.
#
# You should have received a copy of the Artistic License 2.0
# along the source as a COPYING file. If not, obtain it from
# http://www.perlfoundation.org/artistic_license_2_0.

@prefix foaf:	<http://xmlns.com/foaf/0.1/> .
@prefix doap:	<http://usefulinc.com/ns/doap#> .
@prefix lv2:	<http://lv2plug.in/ns/lv2core#> .
@prefix ui:		<http://lv2plug.in/ns/extensions/ui#> .
@prefix atom:	<http://lv2plug.in/ns/ext/atom#> .
@prefix midi:	<http://lv2plug.in/ns/ext/midi#> .
@prefix urid: <http://lv2plug.in/ns/ext/urid#> .
@prefix kx:		<http://kxstudio.sf.net/ns/lv2ext/external-ui#> .

@prefix lic:	<http://opensource.org/licenses/> .
@prefix omk:	<http://open-music-kontrollers.ch/ventosus#> .
@prefix proj:	<http://open-music-kontrollers.ch/lv2/> .
@prefix midi_matrix:	<http://open-music-kontrollers.ch/lv2/midi_matrix#> .

# Maintainer
omk:me
	a foaf:Person ;
	foaf:name "Hanspeter Portner" ;
	foaf:mbox <mailto:dev@open-music-kontrollers.ch> ;
	foaf:homepage <http://open-music-kontrollers.ch> .

lv2:isBitmask
	a lv2:PortProperty .

# Project
proj:midi_matrix
	a doap:Project ;
	doap:maintainer omk:me ;
	doap:name "MIDI Matrix Bundle" .

# Channel Filter UI
midi_matrix:channel_filter_eo
	a ui:EoUI ;
	lv2:extensionData ui:resize ;
	lv2:optionalFeature ui:resize .
midi_matrix:channel_filter_ui
	a ui:UI ;
	lv2:requiredFeature ui:idleInterface ;
  lv2:extensionData ui:idleInterface, ui:showInterface .
midi_matrix:channel_filter_x11
	a ui:X11UI ;
	lv2:requiredFeature ui:idleInterface ;
	lv2:optionalFeature ui:resize ;
  lv2:extensionData ui:idleInterface, ui:resize .
midi_matrix:channel_filter_kx
	a kx:Widget ;
	lv2:requiredFeature kx:Host .

# Channel Filter Plugin
midi_matrix:channel_filter
	a lv2:Plugin,
		lv2:MixerPlugin;
	doap:name "MIDI Channel Matrix Multiplexer and Demultiplexer" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:midi_matrix ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable ;
	lv2:requiredFeature urid:map ;

	lv2:port [
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 0 ;
		lv2:symbol "mask_channel_1" ;
		lv2:name "Mask of Channel 1" ;
		lv2:default 1 ;
		lv2:minimum 0 ;
		lv2:maximum 65535 ;
		lv2:portProperty lv2:integer, lv2:isBitmask ;
	] , [
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 1 ;
		lv2:symbol "mask_channel_2" ;
		lv2:name "Mask of Channel 2" ;
		lv2:default 2 ;
		lv2:minimum 0 ;
		lv2:maximum 65535 ;
		lv2:portProperty lv2:integer, lv2:isBitmask ;
	] , [
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 2 ;
		lv2:symbol "mask_channel_3" ;
		lv2:name "Mask of Channel 3" ;
		lv2:default 4 ;
		lv2:minimum 0 ;
		lv2:maximum 65535 ;
		lv2:portProperty lv2:integer, lv2:isBitmask ;
	] , [
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 3 ;
		lv2:symbol "mask_channel_4" ;
		lv2:name "Mask of Channel 4" ;
		lv2:default 8 ;
		lv2:minimum 0 ;
		lv2:maximum 65535 ;
		lv2:portProperty lv2:integer, lv2:isBitmask ;
	] , [
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 4 ;
		lv2:symbol "mask_channel_5" ;
		lv2:name "Mask of Channel 5" ;
		lv2:default 16 ;
		lv2:minimum 0 ;
		lv2:maximum 65535 ;
		lv2:portProperty lv2:integer, lv2:isBitmask ;
	] , [
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 5 ;
		lv2:symbol "mask_channel_6" ;
		lv2:name "Mask of Channel 6" ;
		lv2:default 32 ;
		lv2:minimum 0 ;
		lv2:maximum 65535 ;
		lv2:portProperty lv2:integer, lv2:isBitmask ;
	] , [
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 6 ;
		lv2:symbol "mask_channel_7" ;
		lv2:name "Mask of Channel 7" ;
		lv2:default 64 ;
		lv2:minimum 0 ;
		lv2:maximum 65535 ;
		lv2:portProperty lv2:integer, lv2:isBitmask ;
	] , [
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 7 ;
		lv2:symbol "mask_channel_8" ;
		lv2:name "Mask of Channel 8" ;
		lv2:default 128 ;
		lv2:minimum 0 ;
		lv2:maximum 65535 ;
		lv2:portProperty lv2:integer, lv2:isBitmask ;
	] , [
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 8 ;
		lv2:symbol "mask_channel_9" ;
		lv2:name "Mask of Channel 9" ;
		lv2:default 256 ;
		lv2:minimum 0 ;
		lv2:maximum 65535 ;
		lv2:portProperty lv2:integer, lv2:isBitmask ;
	] , [
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 9 ;
		lv2:symbol "mask_channel_10" ;
		lv2:name "Mask of Channel 10" ;
		lv2:default 512 ;
		lv2:minimum 0 ;
		lv2:maximum 65535 ;
		lv2:portProperty lv2:integer, lv2:isBitmask ;
	] , [
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 10 ;
		lv2:symbol "mask_channel_11" ;
		lv2:name "Mask of Channel 11" ;
		lv2:default 1024 ;
		lv2:minimum 0 ;
		lv2:maximum 65535 ;
		lv2:portProperty lv2:integer, lv2:isBitmask ;
	] , [
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 11 ;
		lv2:symbol "mask_channel_12" ;
		lv2:name "Mask of Channel 12" ;
		lv2:default 2048 ;
		lv2:minimum 0 ;
		lv2:maximum 65535 ;
		lv2:portProperty lv2:integer, lv2:isBitmask ;
	] , [
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 12 ;
		lv2:symbol "mask_channel_13" ;
		lv2:name "Mask of Channel 13" ;
		lv2:default 4096 ;
		lv2:minimum 0 ;
		lv2:maximum 65535 ;
		lv2:portProperty lv2:integer, lv2:isBitmask ;
	] , [
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 13 ;
		lv2:symbol "mask_channel_14" ;
		lv2:name "Mask of Channel 14" ;
		lv2:default 8192 ;
		lv2:minimum 0 ;
		lv2:maximum 65535 ;
		lv2:portProperty lv2:integer, lv2:isBitmask ;
	] , [
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 14 ;
		lv2:symbol "mask_channel_15" ;
		lv2:name "Mask of Channel 15" ;
		lv2:default 16384 ;
		lv2:minimum 0 ;
		lv2:maximum 65535 ;
		lv2:portProperty lv2:integer, lv2:isBitmask ;
	] , [
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 15 ;
		lv2:symbol "mask_channel_16" ;
		lv2:name "Mask of Channel 16" ;
		lv2:default 32768 ;
		lv2:minimum 0 ;
		lv2:maximum 65535 ;
		lv2:portProperty lv2:integer, lv2:isBitmask ;
	] , [
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent ;
		lv2:index 16 ;
		lv2:symbol "midi_in" ;
		lv2:name "MIDI Input Port" ;
		lv2:designation lv2:control ;
	] , [
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent ;
		lv2:index 17 ;
		lv2:symbol "midi_out" ;
		lv2:name "MIDI Output Port" ;
		lv2:designation lv2:control ;
	] .
