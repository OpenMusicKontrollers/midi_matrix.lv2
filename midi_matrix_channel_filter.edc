/*
 * Copyright (c) 2014 Hanspeter Portner (dev@open-music-kontrollers.ch)
 * 
 * This GUI theme and its accompanying resources are released under a
 * Creative Commons Attribution Non-Commercial Share-Alike License 3.0
 */

#define MIDI_MATRIX_CHANNEL_FILTER_URI			MIDI_MATRIX_URI"#channel_filter"
#define MIDI_MATRIX_CHANNEL_FILTER_UI_URI		MIDI_MATRIX_CHANNEL_FILTER_URI"/ui"

images {
	image: "encapsulation.png" COMP;
	image: "omk_logo_256x256.png" COMP;
	image: "border.png" COMP;
}

fonts {
	font: "DejaVuSansMono-Bold.ttf" "default";
}

group {
	name: MIDI_MATRIX_CHANNEL_FILTER_UI_URI"/theme";

	parts {
		part {
			name: "bg";
			type: RECT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				color: 48 48 48 255;
			}
		}
		part {
			name: "encapsulation";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				image {
					normal: "encapsulation.png";
					border: 12 12 12 12;
					middle: 0;
				}
			}
		}
		part {
			name: "logo";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				rel1.relative: 0.2 0.2;
				rel2.relative: 0.8 0.8;
				aspect: 1 1;
				aspect_preference: BOTH;
				image.normal: "omk_logo_256x256.png";
				color: 255 255 255 16;
			}
		}
		part {
			name: "matrix";
			type: SWALLOW;
			mouse_events: 1;
			repeat_events: 1;
			description {
				state: "default" 0.0;
				rel1.offset: 12 12;
				rel2.offset: -12 -12;
			}
		}
	}
}

group {
	name: MIDI_MATRIX_CHANNEL_FILTER_UI_URI"/label/inputs";

	parts {
		part {
			name: "default";
			type: TEXT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				text {
					text: "Input Channels";
					size: 14;
					align: 0.5 0.5;
				}
				color: 128 128 128 255;
			}
		}
	}
}

group {
	name: MIDI_MATRIX_CHANNEL_FILTER_UI_URI"/label/outputs";

	parts {
		part {
			name: "center";
			type: RECT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				rel1.relative: 0.5 0.5;
				rel2.relative: 0.5 0.5;
			}
		}
		part {
			name: "default";
			type: TEXT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				rel1.relative: -8 0;
				rel2.relative: 8 1;
				map {
					on: 1;
					rotation.center: "center";
					rotation.z: -90;
				}
				text {
					text: "Output Channels";
					size: 14;
					align: 0.5 0.5;
				}
				color: 128 128 128 255;
			}
		}
	}
}

group {
	name: MIDI_MATRIX_CHANNEL_FILTER_UI_URI"/label";

	parts {
		part {
			name: "bg";
			type: RECT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				rel1.relative: 0.1 0.1;
				rel2.relative: 0.9 0.9;
				color: 128 128 128 255;
			}
			description {
				state: "default" 1.0;
				inherit: "default" 0.0;
				color: 255 0 0 255;
			}
		}

		part {
			name: "default";
			type: TEXT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				text {
					text: "00";
					size: 11;
					align: 0.5 0.5;
				}
				color: 48 48 48 255;
			}
		}

		part {
			name: "ev";
			type: IMAGE;
			mouse_events: 1;
			description {
				state: "default" 0.0;
				image.normal: "border.png";
				image.border: 2 2 2 2;
				image.middle: 0;
				color: 255 255 255 0;
			}
			description {
				state: "default" 1.0;
				inherit: "default" 0.0;
				color: 255 255 255 255;
			}
		}
	}

	programs {
		program {
			signal: "mouse,in";
			source: "ev";
			action: STATE_SET "default" 1.0;
#ifdef USE_TRANSITIONS
			transition: DECELERATE 0.1;
#endif
			target: "ev";
		}
		program {
			signal: "mouse,in";
			source: "ev";
			action: SIGNAL_EMIT "in" MIDI_MATRIX_CHANNEL_FILTER_UI_URI;
		}
		program {
			signal: "mouse,out";
			source: "ev";
			action: STATE_SET "default" 0.0;
#ifdef USE_TRANSITIONS
			transition: ACCELERATE 0.3;
#endif
			target: "ev";
		}
		program {
			signal: "mouse,out";
			source: "ev";
			action: SIGNAL_EMIT "out" MIDI_MATRIX_CHANNEL_FILTER_UI_URI;
		}

		program {
			signal: "mouse,clicked,*";
			source: "ev";
			action: SIGNAL_EMIT "changed" MIDI_MATRIX_CHANNEL_FILTER_UI_URI;
		}

		program {
			signal: "clear";
			source: MIDI_MATRIX_CHANNEL_FILTER_UI_URI;
			action: STATE_SET "default" 0.0;
			target: "bg";
		}
		program {
			signal: "edge";
			source: MIDI_MATRIX_CHANNEL_FILTER_UI_URI;
			after: "highlight";
		}
		program {
			signal: "vertical";
			source: MIDI_MATRIX_CHANNEL_FILTER_UI_URI;
			after: "highlight";
		}
		program {
			signal: "horizontal";
			source: MIDI_MATRIX_CHANNEL_FILTER_UI_URI;
			after: "highlight";
		}
		program {
			name: "highlight";
			action: STATE_SET "default" 1.0;
			target: "bg";
		}
	}
}

group {
	name: MIDI_MATRIX_CHANNEL_FILTER_UI_URI"/tile";

	parts {
		part {
			name: "grid.vertical";
			type: RECT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				rel1.relative: 0.5 0;
				rel1.offset: -0.5 0;
				rel2.relative: 0.5 1;
				rel2.offset: 0.5 0;
				color: 128 128 128 255;
			}
		}
		part {
			name: "grid.horizontal";
			type: RECT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				rel1.relative: 0 0.5;
				rel1.offset: 0 -0.5;
				rel2.relative: 1 0.5;
				rel2.offset: 0 0.5;
				color: 128 128 128 255;
			}
		}
		
		part {
			name: "clip.rect";
			type: RECT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				color: 255 255 255 255;
			}
			description {
				state: "default" 1.0;
				inherit: "default" 0.0;
				color: 255 0 0 255;
			}
		}
		part {
			name: "rect";
			type: RECT;
			clip_to: "clip.rect";
			mouse_events: 0;
			description {
				state: "default" 0.0;
				rel1.relative: 0.25 0.25;
				rel2.relative: 0.75 0.75;
				color: 255 255 255 0;
			}
			description {
				state: "default" 1.0;
				inherit: "default" 0.0;
				color: 255 255 255 255;
			}
		}

		part {
			name: "line.vertical";
			type: RECT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				rel1.relative: 0.5 0.5;
				rel2.relative: 0.5 0.5;
				color: 255 0 0 255;
			}
			description {
				state: "default" 0.5;
				inherit: "default" 0.0;
				rel1.relative: 0.4 0.4;
				rel2.relative: 0.6 1.0;
			}
			description {
				state: "default" 1.0;
				inherit: "default" 0.0;
				rel1.relative: 0.4 0.0;
				rel2.relative: 0.6 1.0;
			}
		}
		part {
			name: "line.horizontal";
			type: RECT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				rel1.relative: 0.5 0.5;
				rel2.relative: 0.5 0.5;
				color: 255 0 0 255;
			}
			description {
				state: "default" 0.5;
				inherit: "default" 0.0;
				rel1.relative: 0.4 0.4;
				rel2.relative: 1.0 0.6;
			}
			description {
				state: "default" 1.0;
				inherit: "default" 0.0;
				rel1.relative: 0.0 0.4;
				rel2.relative: 1.0 0.6;
			}
		}

		part {
			name: "ev";
			type: IMAGE;
			mouse_events: 1;
			description {
				state: "default" 0.0;
				image.normal: "border.png";
				image.border: 2 2 2 2;
				image.middle: 0;
				color: 255 255 255 0;
			}
			description {
				state: "default" 1.0;
				inherit: "default" 0.0;
				color: 255 255 255 255;
			}
		}
	}

	programs {
		program {
			signal: "mouse,in";
			source: "ev";
			action: STATE_SET "default" 1.0;
#ifdef USE_TRANSITIONS
			transition: DECELERATE 0.1;
#endif
			target: "clip.rect";
			target: "ev";
		}
		program {
			signal: "mouse,in";
			source: "ev";
			action: SIGNAL_EMIT "in" MIDI_MATRIX_CHANNEL_FILTER_UI_URI;
		}
		program {
			signal: "mouse,out";
			source: "ev";
			action: STATE_SET "default" 0.0;
#ifdef USE_TRANSITIONS
			transition: ACCELERATE 0.3;
#endif
			target: "clip.rect";
			target: "ev";
		}
		program {
			signal: "mouse,out";
			source: "ev";
			action: SIGNAL_EMIT "out" MIDI_MATRIX_CHANNEL_FILTER_UI_URI;
		}
		program {
			signal: "mouse,clicked,*";
			source: "ev";
			action: SIGNAL_EMIT "changed" MIDI_MATRIX_CHANNEL_FILTER_UI_URI;
		}
		program {
			signal: "highlight,on";
			source: MIDI_MATRIX_CHANNEL_FILTER_UI_URI;
			action: STATE_SET "default" 1.0;
#ifdef USE_TRANSITIONS
			transition: DECELERATE 0.1;
#endif
			target: "clip.rect";
		}
		program {
			signal: "highlight,off";
			source: MIDI_MATRIX_CHANNEL_FILTER_UI_URI;
			action: STATE_SET "default" 0.0;
#ifdef USE_TRANSITIONS
			transition: DECELERATE 0.3;
#endif
			target: "clip.rect";
		}

		program {
			signal: "on";
			source: MIDI_MATRIX_CHANNEL_FILTER_UI_URI;
			action: STATE_SET "default" 1.0;
#ifdef USE_TRANSITIONS
			transition: DECELERATE 0.3;
#endif
			target: "rect";
		}
		program {
			signal: "off";
			source: MIDI_MATRIX_CHANNEL_FILTER_UI_URI;
			action: STATE_SET "default" 0.0;
#ifdef USE_TRANSITIONS
			transition: ACCELERATE 0.5;
#endif
			target: "rect";
		}

		program {
			signal: "clear";
			source: MIDI_MATRIX_CHANNEL_FILTER_UI_URI;
			action: STATE_SET "default" 0.0;
			target: "line.vertical";
			target: "line.horizontal";
		}
		program {
			signal: "edge";
			source: MIDI_MATRIX_CHANNEL_FILTER_UI_URI;
			action: STATE_SET "default" 0.5;
			target: "line.vertical";
			target: "line.horizontal";
		}
		program {
			signal: "edge,vertical";
			source: MIDI_MATRIX_CHANNEL_FILTER_UI_URI;
			action: STATE_SET "default" 1.0;
			target: "line.vertical";
		}
		program {
			signal: "edge,vertical";
			source: MIDI_MATRIX_CHANNEL_FILTER_UI_URI;
			action: STATE_SET "default" 0.5;
			target: "line.horizontal";
		}
		program {
			signal: "edge,horizontal";
			source: MIDI_MATRIX_CHANNEL_FILTER_UI_URI;
			action: STATE_SET "default" 0.5;
			target: "line.vertical";
		}
		program {
			signal: "edge,horizontal";
			source: MIDI_MATRIX_CHANNEL_FILTER_UI_URI;
			action: STATE_SET "default" 1.0;
			target: "line.horizontal";
		}
		program {
			signal: "vertical";
			source: MIDI_MATRIX_CHANNEL_FILTER_UI_URI;
			action: STATE_SET "default" 1.0;
			target: "line.vertical";
		}
		program {
			signal: "vertical";
			source: MIDI_MATRIX_CHANNEL_FILTER_UI_URI;
			action: STATE_SET "default" 0.0;
			target: "line.horizontal";
		}
		program {
			signal: "horizontal";
			source: MIDI_MATRIX_CHANNEL_FILTER_UI_URI;
			action: STATE_SET "default" 1.0;
			target: "line.horizontal";
		}
		program {
			signal: "horizontal";
			source: MIDI_MATRIX_CHANNEL_FILTER_UI_URI;
			action: STATE_SET "default" 0.0;
			target: "line.vertical";
		}
	}
}
